{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/michalstachnik/Documents/ors/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nvar Index = function Index(props) {\n  console.log('props in index', props);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/about\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    title: \"about\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"about\")), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"hello index\"));\n};\n\nIndex.getInitialProps = function _callee() {\n  var res, _ref, polls;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('http://localhost:5000/polls'));\n\n        case 2:\n          res = _context.sent;\n          console.log('the res', res);\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 6:\n          _ref = _context.sent;\n          polls = _ref.polls;\n          console.log('the polls', polls);\n          return _context.abrupt(\"return\", {\n            polls: polls\n          });\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/michalstachnik/Documents/ors/pages/index.js"],"names":["Link","fetch","Index","props","console","log","getInitialProps","res","json","polls"],"mappings":";;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK,EAAI;AACrBC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,KAA9B;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,KAAK,EAAC,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJF,CADF;AAQD,CAVD;;AAYAD,KAAK,CAACI,eAAN,GAAwB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACJL,KAAK,CAAC,6BAAD,CADD;;AAAA;AAChBM,UAAAA,GADgB;AAGtBH,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBE,GAAvB;AAHsB;AAAA,2CAKEA,GAAG,CAACC,IAAJ,EALF;;AAAA;AAAA;AAKdC,UAAAA,KALc,QAKdA,KALc;AAOtBL,UAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBI,KAAzB;AAPsB,2CASf;AACLA,YAAAA,KAAK,EAALA;AADK,WATe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAcA,eAAeP,KAAf","sourcesContent":["import Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nconst Index = props => {\n  console.log('props in index', props);\n  return (\n    <div>\n      <Link href=\"/about\">\n        <a title=\"about\">about</a>\n      </Link>\n      <p>hello index</p>\n    </div>\n  );\n};\n\nIndex.getInitialProps = async function() {\n  const res = await fetch('http://localhost:5000/polls');\n\n  console.log('the res', res);\n\n  const { polls } = await res.json();\n\n  console.log('the polls', polls);\n\n  return {\n    polls\n  };\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}